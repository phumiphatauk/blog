// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.21.0

package db

import (
	"context"
	"time"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	CountAllRole(ctx context.Context, lower string) (int64, error)
	CountUser(ctx context.Context) (int64, error)
	CountUserForGenerateCode(ctx context.Context) (int64, error)
	CreateResetPassword(ctx context.Context, arg CreateResetPasswordParams) (ResetPassword, error)
	CreateRole(ctx context.Context, name string) (Role, error)
	CreateSession(ctx context.Context, arg CreateSessionParams) (Session, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	CreateUserRole(ctx context.Context, arg CreateUserRoleParams) error
	DeleteRole(ctx context.Context, id int64) error
	DeleteUser(ctx context.Context, id int64) error
	DeleteUserRoleByUserId(ctx context.Context, userID int64) error
	FixErrorImportPGType(ctx context.Context, dollar_1 pgtype.Timestamp) (interface{}, error)
	FixErrorImportTime(ctx context.Context, createdAt time.Time) (int64, error)
	GetAllPermissionGroup(ctx context.Context) ([]PermissionGroup, error)
	GetAllRole(ctx context.Context, arg GetAllRoleParams) ([]GetAllRoleRow, error)
	GetPermissionByPermissionGroupId(ctx context.Context, permissionGroupID int64) ([]GetPermissionByPermissionGroupIdRow, error)
	GetPermissionByPermissionGroupIdAndRoleId(ctx context.Context, arg GetPermissionByPermissionGroupIdAndRoleIdParams) ([]GetPermissionByPermissionGroupIdAndRoleIdRow, error)
	GetPermissionByUserId(ctx context.Context, id int64) ([]string, error)
	GetResetPasswordByToken(ctx context.Context, token string) (ResetPassword, error)
	GetRoleById(ctx context.Context, id int64) (GetRoleByIdRow, error)
	GetRoleByUserId(ctx context.Context, userID int64) ([]GetRoleByUserIdRow, error)
	GetRoleForDropDownList(ctx context.Context) ([]GetRoleForDropDownListRow, error)
	GetSession(ctx context.Context, id uuid.UUID) (GetSessionRow, error)
	GetUser(ctx context.Context, id int64) (GetUserRow, error)
	GetUserByEmail(ctx context.Context, email string) (User, error)
	GetUserByUsername(ctx context.Context, username string) (User, error)
	GetUserHashedPassword(ctx context.Context, id int64) (string, error)
	ListUsers(ctx context.Context, arg ListUsersParams) ([]ListUsersRow, error)
	UpdateRole(ctx context.Context, arg UpdateRoleParams) error
	UpdateUser(ctx context.Context, arg UpdateUserParams) (User, error)
	UpdateUserPassword(ctx context.Context, arg UpdateUserPasswordParams) error
	UseResetPassword(ctx context.Context, token string) error
}

var _ Querier = (*Queries)(nil)
